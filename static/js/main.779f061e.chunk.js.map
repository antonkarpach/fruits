{"version":3,"sources":["components/fruits/FruitIttem.js","components/fruits/FruitButton.js","components/fruits/FruitsArr.js","components/fruits/FruitsButtons.js","components/fruits/FruitService.js","components/fruits/Fruits.js","App.js","reportWebVitals.js","index.js"],"names":["FruitItem","image","name","description","className","src","FruitButton","children","onClick","value","propType","PropTypes","element","isRequired","func","string","FruitsArr","FruitsButtons","onFruitsClick","e","target","map","item","FruitService","data","fruitName","find","Fruits","useState","fruit","setFruit","filterByName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAGaA,EAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACtC,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKC,IAAKJ,MAEZ,sBAAKG,UAAU,kBAAf,UACE,6BAAKF,IACL,4BAAIC,W,wBCPCG,G,MAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC9C,OACE,wBAAQA,MAAOA,EAAOL,UAAU,cAAcI,QAASA,EAAvD,SAAiED,MAIrED,EAAYI,SAAW,CACrBH,SAAUI,IAAUC,QAAQC,WAC5BL,QAASG,IAAUG,KACnBL,MAAOE,IAAUI,QCbZ,IAAMC,EAAY,CACvB,CACEd,KAAM,SACNC,YAAa,yLACbF,MAAO,gEAET,CACEC,KAAM,QACNC,YAAa,sIACbF,MAAO,4EAET,CACEC,KAAM,aACNC,YAAa,sLACbF,MAAO,2DAET,CACEC,KAAM,OACNC,YAAa,2NACbF,MAAO,qHCdEgB,EAAgB,SAAC,GAAe,IAAdT,EAAa,EAAbA,QAEvBU,EAAgB,SAAAC,GACpBX,EAAQW,EAAEC,OAAOX,QAEnB,OACE,qBAAKL,UAAU,gBAAf,SACGY,EAAUK,KAAI,SAAAC,GACb,OAAO,cAAC,EAAD,CAAab,MAAOa,EAAKpB,KAAMM,QAASU,EAAxC,SAAwDI,EAAKpB,a,cCbvDqB,E,iGACnB,SAAoBC,EAAMC,GACxB,OAAOD,EAAKE,MAAK,SAAAJ,GAAI,OAAIA,EAAKpB,OAASuB,S,KCK9BE,EAAS,WAAO,IAAD,EACCC,mBAASZ,EAAU,IADpB,mBACnBa,EADmB,KACZC,EADY,KAO1B,OACE,qBAAK1B,UAAU,SAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,CAAeI,QAPL,SAACC,GACfqB,EAASP,EAAaQ,aAAaf,EAAWP,OAO1C,cAAC,EAAD,eAAeoB,UCPRG,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.779f061e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./FruitIttem.css\";\n\nexport const FruitItem = ({image, name, description}) => {\n  return (\n    <div className=\"FruitItem\">\n      <div className=\"FruitItem__image\">\n        <img src={image}/>\n      </div>\n      <div className=\"FruitItem__text\">\n        <h1>{name}</h1>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FruitButton.css'\n\nexport const FruitButton = ({children, onClick, value}) => {\n  return (\n    <button value={value} className=\"FruitButton\" onClick={onClick}>{children}</button>\n  );\n}\n\nFruitButton.propType = {\n  children: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  value: PropTypes.string\n}\n","export const FruitsArr = [\n  {\n    name: 'Banana',\n    description: 'This is a banana, it is very tasty and you can eat a lot of it. However, as you might guess, not all types of banana are good for humans, there are many things we just might not try.',\n    image: 'https://i-fakt.ru/wp-content/uploads/2013/09/fakty-banan.jpg',\n  },\n  {\n    name: 'Apple',\n    description: 'We love apples very much, because they are red and green, there may be other colors, but still this is the best fruit in the world.',\n    image: 'http://veralline.com/uploads/images/comparison/2014/12/03/cb7c7ea0de.png',\n  },\n  {\n    name: 'Watermelon',\n    description: 'This is the largest berry that has ever grown on planet earth. Although, there is debate about whether this is actually a berry, but we know for sure that watermelon is delicious.',\n    image: 'https://vesti.ua/wp-content/uploads/2020/07/arbuz-1.jpg',\n  },\n  {\n    name: 'Pear',\n    description: 'There is an ancient saying: \"A pear weighs, you cannot eat it.\" There we describe Ilyich\\'s light bulb, although it was the pear that became the very inspiration for this invention. So eat a pear and don\\'t sweat it.',\n    image: 'https://st.depositphotos.com/1000955/1261/i/600/depositphotos_12612910-stock-photo-ripe-yellow-pear-on-white.jpg',\n  }\n  ];\n","import React from 'react';\nimport './FruitsButtons.css';\nimport {FruitButton} from \"./FruitButton\";\nimport {FruitsArr} from \"./FruitsArr\";\n\nexport const FruitsButtons = ({onClick}) => {\n\n  const onFruitsClick = e => {\n    onClick(e.target.value)\n  }\n  return (\n    <div className=\"FruitsButtons\">\n      {FruitsArr.map(item => {\n        return <FruitButton value={item.name} onClick={onFruitsClick}>{item.name}</FruitButton>\n      })}\n    </div>\n  );\n}\n","export default class FruitService {\n  static filterByName(data, fruitName) {\n    return data.find(item => item.name === fruitName)\n  }\n}\n","import React, {useState} from 'react';\nimport './Fruits.css';\nimport {FruitItem} from \"./FruitIttem\";\nimport {FruitsButtons} from \"./FruitsButtons\";\nimport {FruitsArr} from \"./FruitsArr\";\nimport FruitService from \"./FruitService\";\n\nexport const Fruits = () => {\n  const [fruit, setFruit ] = useState(FruitsArr[0]);\n\n  const onClick = (value) => {\n    setFruit(FruitService.filterByName(FruitsArr, value))\n  }\n\n  return(\n    <div className=\"Fruits\">\n      <div className=\"Fruits__container\">\n        <FruitsButtons onClick={onClick}/>\n        <FruitItem {...fruit} />\n      </div>\n    </div>\n  );\n}\n","import './App.css';\nimport {Fruits} from \"./components/fruits/Fruits\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Fruits/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}